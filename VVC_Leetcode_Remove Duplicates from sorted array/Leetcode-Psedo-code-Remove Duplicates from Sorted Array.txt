
Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums.

Example 1:

Input: nums = [1,1,2]
Output: 2, nums = [1,2,_]

Example 2:

Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]

Psesodo code:

1. In the main program, create an array of numbers.

2. Define a function called 'removeDuplicates' that takes an array of numbers as input
function removeDuplicates(nums).

3. Initialize a variable 'i' to keep track of the unique elements: i = 0.

4. Iterate over the array starting from the second element
    for j from 1 to length of nums.

5. If the current element is different from the previous unique element
        if nums[i] is not equal to nums[j]:

6. Move to the next index to store the unique element
            i++

7. Store the current element at the position of the next unique element
            nums[i] = nums[j]

8. Return the count of unique elements (which is 'i' incremented by 1)
    return i + 1.

9. Call the 'removeDuplicates' function with the array as an argument and store the result in 'k' variable.
k = removeDuplicates(nums)

10. Iterate over the array up to the count of unique elements
for i from 0 to k:
    Print each unique element
    print(nums[i] + " ").