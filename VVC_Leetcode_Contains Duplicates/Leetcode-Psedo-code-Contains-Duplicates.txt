
Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

Example 1:

Input: nums = [1,2,3,1]
Output: true
Example 2:

Input: nums = [1,2,3,4]
Output: false
Example 3:

Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true

Pseudo Code 1:
1. In the main program, create an array of numbers.

2. Define a function called 'containsDuplicate' that takes an array of numbers as input function containsDuplicate(nums).

3. Use bubble sort to arrange the numbers in ascending order
    for i from 0 to length of nums - 1:
        for j from 0 to length of nums - 1:
            if nums[j] > nums[j + 1]:
                swap nums[j] and nums[j + 1].

4. Check for duplicates in the sorted array
    for i from 0 to length of nums - 1:
        if nums[i] is equal to nums[i + 1]:
            return true.

5. If no duplicates are found, return false
    return false

6. Call the 'containsDuplicate' function with the array as an argument and print the result:
System.out.print(containsDuplicate(nums));


Pseudo Code 2:
1. In the main program, create an array of numbers.

2. Define a function called 'containsDuplicate' that takes an array of numbers as input function containsDuplicate(nums).

3. Iterate over each element in the array
    for i from 0 to length of nums - 1:
        for j from i + 1 to length of nums - 1:

4. If a duplicate is found, return true
            if nums[i] is equal to nums[j]:
                return true.

5. If no duplicates are found, return false
    return false.

    public class method_2 {
    public static boolean containsDuplicate(int nums[]){
        
    }
    public static void main(String[] args) {
        int nums[] = {1, 2, 3, 1};
        System.out.println(containsDuplicate(nums));
    }
}